//============================================================================//
//                                                                            //
//                         Copyright Â© 2015 Sandpolis                         //
//                                                                            //
//  This source file is subject to the terms of the Mozilla Public License    //
//  version 2. You may not use this file except in compliance with the MPL    //
//  as published by the Mozilla Foundation.                                   //
//                                                                            //
//============================================================================//
syntax = "proto3";

package core.instance.msg;

import "com/sandpolis/core/instance/plugin.proto";

option java_package = "com.sandpolis.core.instance.msg";
option optimize_for = CODE_SIZE;

// Request: Attempt a plugin operation.
message RQ_PluginOperation {
    enum PluginOperation {
        PLUGIN_CREATE = 0;
        PLUGIN_DELETE = 1;
        PLUGIN_UPDATE = 2;
        PLUGIN_SYNC = 3;
    }
    PluginOperation operation = 1;

    repeated core.instance.PluginConfig plugin_config = 2;
}

message RS_PluginSync {

    repeated core.instance.PluginConfig plugin_config = 1;
}

/**
 * A request to download an artifact.
 */
message RQ_ArtifactDownload {

    // The coordinates of the artifact to download
    string coordinates = 1;

    // Whether it's acceptable to receive the external location of the artifact only
    bool location = 2;
}

/**
 * The download response bearing the artifact binary or the artifact's address.
 */
message RS_ArtifactDownload {
    oneof source {
        // The artifact binary
        bytes binary = 1;

        // The artifact's HTTP location
        string url = 2;

        // The artifact's maven central coordinates
        string coordinates = 3;
    }
}

/**
 * A request to install a server plugin.
 */
message RQ_PluginInstall {

    oneof source {
        // The plugin binary
        bytes plugin_binary = 1;

        // The plugin's HTTP location
        string plugin_url = 2;

        // The plugin's maven central coordinates
        string plugin_coordinates = 3;
    }
}

enum RS_PluginInstall {

    // The operation was successful
    PLUGIN_INSTALL_OK = 0;

    // The operation failed
    PLUGIN_INSTALL_FAILED = 1;

    // The operation failed because plugins are disabled
    PLUGIN_INSTALL_FAILED_DISABLED = 2;

    // The operation failed because the plugin certificate could not be verified
    PLUGIN_INSTALL_FAILED_CERTIFICATE = 3;

    // The request was invalid
    PLUGIN_INSTALL_INVALID = 4;
}
